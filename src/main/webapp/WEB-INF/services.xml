<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2012 Tim Besard <tim.besard@gmail.com>

    All rights reserved.

-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"       
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-3.1.xsd">

    <!--
      Framework configuration
      -->

    <!-- Use annotations -->
    <context:annotation-config />
    
    <!-- Load the service properties -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <value>classpath:services.properties</value>
        </property>
    </bean>
    
    <!-- Aspects -->
    <aop:aspectj-autoproxy/>
    <bean id="timingAspect" class="org.perf4j.slf4j.aop.TimingAspect"/>

    <!-- Bean postprocessors -->
    <bean class="be.mira.adastra3.spring.LoggerPostProcessor" />

    <!-- Field converters -->
    <bean class="be.mira.adastra3.spring.UUIDConverter" />


    <!--
      HTTP message conversion
      -->

    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <util:list id="beanList">
                <ref bean="jsonMessageConverter"/>
            </util:list>
        </property>
    </bean>

    <!-- JSON message conversion -->
    <bean id="jaxbAnnotationIntrospector" class="org.codehaus.jackson.xc.JaxbAnnotationIntrospector" />
    <bean id="jacksonAnnotationIntrospector" class="org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector" />
    <bean id="jacksonObjectMapper" class="org.codehaus.jackson.map.ObjectMapper">
        <property name="serializationConfig.annotationIntrospector" ref="jaxbAnnotationIntrospector" />
        <!--
            We need the Jackson annotator since JAXB doesn't provide a way to construct immutable
            objects and hence we need to use the Jackson-specific @JsonCreator annotation.

            <property name="deserializationConfig.annotationIntrospector" ref="jaxbAnnotationIntrospector" />
        -->
        <property name="deserializationConfig.annotationIntrospector" ref="jacksonAnnotationIntrospector" />
    </bean>
    <bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
        <property name="objectMapper" ref="jacksonObjectMapper"/>
    </bean>


    <!--
      Business objects
      -->
    
    <bean class="be.mira.adastra3.server.bo.Repository" id="repository" />
    <bean class="be.mira.adastra3.server.bo.Network" id="network" />

    <bean class="be.mira.adastra3.server.bo.Coordinator" />

    <bean id="connectionProcessor" class="be.mira.adastra3.server.bo.repository.processors.ConnectionProcessor" scope="prototype" />
    <bean id="configurationProcessor" class="be.mira.adastra3.server.bo.repository.processors.ConfigurationProcessor" scope="prototype" />
    <!--<bean class="be.mira.adastra3.server.bo.RepositoryMonitor" id="repositoryMonitor" />
        <lookup-method name="createConnectionProcessor" bean="connectionProcessor"/>
        <lookup-method name="createConfigurationProcessor" bean="configurationProcessor"/>
    </bean>-->


    <!--
      Web
      -->
    
    <bean class="be.mira.adastra3.server.web.RootController" />
    
    <bean class="be.mira.adastra3.server.web.RepositoryController" />
    
    <bean class="be.mira.adastra3.server.web.NetworkController" />
</beans>